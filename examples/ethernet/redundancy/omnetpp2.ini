[General]
network = EthernetRedundancyExample2

# visualizer
*.visualizer.infoVisualizer.modules = "*.source.app[0].source or *.destination.app[0]"

# source
*.source.numApps = 1
*.source.app[0].typename = "UdpApp"
*.source.app[0].io.destAddress = "destination"
*.source.app[0].io.destPort = 1000
*.source.app[0].source.displayStringTextFormat = "sent %p pk (%l)"
*.source.app[0].source.packetLength = 1200B
*.source.app[0].source.productionInterval = truncnormal(100us,50us)

# destination
*.destination.numApps = 1
*.destination.app[0].typename = "UdpSink"
*.destination.app[0].localPort = 1000

# avoid ARP
*.*.ipv4.arp.typename = "GlobalArp"

# layered Ethernet
*.*.bridging.typename = "BridgingLayer"
*.*.ethernet.typename = "EthernetLayer"
*.*.eth[*].typename = "LayeredEthernetInterface"
*.*.eth[*].bitrate = 100Mbps

# enable stream policing in layer 2
*.source.ieee8021r.typename = "Ieee8021rLayer"
*.destination.ieee8021r.typename = "Ieee8021rLayer"
*.*.ieee8021q.typename = "Ieee8021qProtocol"
*.*.bridging.streamPolicy.typename = "StreamLayer"

# always use 802.1R protocol for egress traffic on all network interfaces
*.*.eth[*].protocol = "ieee8021rtag"

# all interfaces must have the same address to accept packets from all streams
*.destination.eth[*].address = "0A-AA-12-34-56-78"

# seamless stream redundancy configuration
*.streamRedundancyConfigurator.configuration = [{name: "S1", packetFilter: "*", source: "source", destination: "destination", \
                                                 paths: [["s1", "s2a", "s3a"], \
                                                         ["s1", "s2b", "s3b"], \
                                                         ["s1", "s2a", "s2b", "s3b"], \
                                                         ["s1", "s2b", "s2a", "s3a"]]}]
